<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.back.mapper.MystockMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.back.entity.pojo.Mystock">
        <id column="id" property="id" />
        <result column="rdid" property="rdid" />
        <result column="uid" property="uid" />
        <result column="openId" property="openid" />
        <result column="stockCode" property="stockcode" />
        <result column="stockName" property="stockname" />
        <result column="groupName" property="groupName" />
        <result column="note" property="note" />
        <result column="extra" property="extra" />
        <result column="create_person" property="createPerson" />
        <result column="create_time" property="createTime" />
        <result column="update_person" property="updatePerson" />
        <result column="update_time" property="updateTime" />
        <result column="dr" property="dr" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, rdid, uid, openId, stockCode, stockName, group, note, extra, create_person, create_time, update_person, update_time, dr
    </sql>

    <!--批量删除-->
    <update id="removeBatch" parameterType="java.util.List">
        <foreach collection="param"  separator=";"   item="val">
        update mystock
        set dr = 1
        where
            uid =#{val.uid} AND groupName =  #{val.groupName} AND stockName = #{val.stockName} AND dr = 0
        </foreach>
    </update>

    <!--换组-->
    <update id="changeGroup" parameterType="java.util.List">
        <foreach collection="param"  separator=";"   item="val">
            update mystock
            set groupName = #{val.newGroup}
            where
            uid =#{val.uid} AND groupName =  #{val.groupName} AND stockName = #{val.stockName} AND dr = 0
        </foreach>
    </update>

    <!--修改备注-->
    <update id="updateNote" parameterType="com.back.entity.req.MyStockReq">
            update mystock
            set note = #{val.note}
            where
            uid = #{val.uid} AND groupName =  #{val.groupName} AND stockName = #{val.stockName} AND dr = 0
    </update>


    <!--修改备注-->
    <select id="getOneByUidStockNameGroupName" resultType="java.util.Map" >
        select uid,stockName
        from mystock
        where
            uid = #{uid} AND groupName =  #{groupName} AND stockName = #{stockName} AND dr = 0
    </select>
</mapper>
